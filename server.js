/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * EXPANDSPAIN ALPHA‚Ñ¢ - AI SERVICE v7.0 FINAL (GEMINI 2.5)
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * 
 * CHANGELOG v7.0:
 * ‚úÖ Modelos atualizados: Gemini 2.5 Flash, 2.5 Pro, 2.0 Flash
 * ‚úÖ Logs de debug completos em CADA etapa (nunca mais cego)
 * ‚úÖ Fallback autom√°tico sequencial (5 modelos testados)
 * ‚úÖ Cache com log vis√≠vel (nunca mais silencioso)
 * ‚úÖ SafetySettings para evitar censura
 * ‚úÖ Valida√ß√µes robustas
 * ‚úÖ Fallbacks offline completos (PT/EN/ES)
 * ‚úÖ C√≥digo testado e funcional
 * 
 * @version 7.0
 * @date 2025-10-10
 * @author ExpandSpain Team
 * @license Proprietary
 */

'use strict';

const { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } = require('@google/generative-ai');

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// CONFIGURA√á√ÉO DE MODELOS GEMINI (Outubro 2025)
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

/**
 * Lista de modelos em ordem de prioridade:
 * 1. gemini-2.5-flash (est√°vel, r√°pido, recomendado)
 * 2. gemini-2.5-pro (mais completo, melhor qualidade)
 * 3. gemini-2.5-flash-lite (mais econ√¥mico)
 * 4. gemini-2.0-flash (alternativa est√°vel)
 * 5. gemini-pro (legado, √∫ltimo recurso)
 */
const MODEL_CANDIDATES = [
    'gemini-2.5-flash',
    'gemini-2.5-pro',
    'gemini-2.5-flash-lite',
    'gemini-2.0-flash',
    'gemini-pro'
];

// L√™ a chave da API das vari√°veis de ambiente (configurada no Render.com)
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

// Valida√ß√£o cr√≠tica da API Key
if (!GEMINI_API_KEY) {
    console.error('‚ïê'.repeat(70));
    console.error('‚ùå ERRO CR√çTICO: GEMINI_API_KEY n√£o encontrada!');
    console.error('   Configure a vari√°vel de ambiente no Render.com');
    console.error('‚ïê'.repeat(70));
    throw new Error('GEMINI_API_KEY environment variable is required');
}

// Inicializar cliente Gemini
const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);

console.log('‚úÖ [aiService] Google Generative AI inicializado');
console.log(`   Modelos dispon√≠veis para teste: ${MODEL_CANDIDATES.length}`);

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// CACHE EM MEM√ìRIA (7 dias TTL)
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

const analysisCache = new Map();
const CACHE_TTL = 7 * 24 * 60 * 60 * 1000; // 7 dias em milissegundos

// Limpeza autom√°tica de cache expirado (roda a cada 1 hora)
setInterval(() => {
    const now = Date.now();
    let cleaned = 0;
    
    for (const [key, value] of analysisCache.entries()) {
        if (now - value.timestamp > CACHE_TTL) {
            analysisCache.delete(key);
            cleaned++;
        }
    }
    
    if (cleaned > 0) {
        console.log(`üßπ [Cache] Limpou ${cleaned} entrada(s) expirada(s)`);
    }
}, 60 * 60 * 1000);

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// UTILITY FUNCTIONS
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

/**
 * Gera chave √∫nica de cache baseada no perfil do candidato
 */
function generateCacheKey(scoreData, language) {
    const scoreRange = Math.floor((scoreData?.score || 0) / 10) * 10;
    const gapsKey = (scoreData?.gaps || [])
        .map(String)
        .sort()
        .join('|');
    const statusKey = String(scoreData?.status || '')
        .toLowerCase()
        .replace(/\s+/g, '-');
    const profileKey = String(scoreData?.profile || '')
        .toLowerCase()
        .replace(/\s+/g, '-');
    
    return `${language}:${scoreRange}:${statusKey}:${profileKey}:${gapsKey}`;
}

/**
 * Sanitiza texto para prevenir prompt injection
 */
function sanitizeForPrompt(text) {
    if (!text) return 'Not specified';
    
    return String(text)
        .replace(/[^\w\s\-\/,.()‚Ç¨:+]/gi, ' ')
        .replace(/\s{2,}/g, ' ')
        .substring(0, 600)
        .trim();
}

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// PROMPTS COMPLETOS (PT/EN/ES) - FOCO POWER ORACLE‚Ñ¢
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

const PROMPT_TEMPLATES = {
    pt: ({ profile, score, status, gaps, strengths }) => `
Voc√™ √© a Alpha AI, consultora estrat√©gica de vistos da ExpandSpain. Escreva em Portugu√™s do Brasil.

DADOS DO CANDIDATO:
- Perfil: ${profile}
- Pontua√ß√£o: ${score}/100
- Status: ${status}
- Gaps cr√≠ticos: ${gaps || 'Nenhum identificado'}
- For√ßas: ${strengths || 'Nenhuma listada'}

OBJETIVO: Gerar uma an√°lise de 3 par√°grafos que VENDA o Power Oracle‚Ñ¢ (‚Ç¨97). N√£o mencionar qualquer outro produto.

REGRAS ABSOLUTAS:
- M√°ximo: 280 palavras. ZERO emojis.
- Tom: claro, estrat√©gico, persuasivo, sem prometer "aprova√ß√£o garantida".
- Falar diretamente com "voc√™" (n√£o use "o candidato").
- Usar exatamente os nomes dos gaps fornecidos (n√£o inventar novos).
- Mencionar "Power Oracle‚Ñ¢" somente no 3¬∫ par√°grafo.

ESTRUTURA OBRIGAT√ìRIA:

PAR√ÅGRAFO 1 (3‚Äì4 linhas) ‚Äî Diagn√≥stico T√©cnico:
- Iniciar com: "Seu perfil de [Perfil] com pontua√ß√£o [X]/100 indica [Status]."
- Listar 2‚Äì3 gaps cr√≠ticos pelo nome.
- Indicar taxa de rejei√ß√£o hist√≥rica:
  ‚Ä¢ 0‚Äì39: 90‚Äì95%
  ‚Ä¢ 40‚Äì59: 60‚Äì75%
  ‚Ä¢ 60‚Äì74: 40‚Äì55%
  ‚Ä¢ 75‚Äì89: 20‚Äì35%
  ‚Ä¢ 90‚Äì100: 5‚Äì15%

PAR√ÅGRAFO 2 (3‚Äì4 linhas) ‚Äî O Problema Real:
- Explicar por que informa√ß√£o ‚â† estrat√©gia por faixa:
  ‚Ä¢ 0‚Äì39: "99% aplicam antes de estarem prontos e desperdi√ßam ‚Ç¨2.000+."
  ‚Ä¢ 40‚Äì59: "87% com esses gaps s√£o rejeitados mesmo 'sabendo' os requisitos."
  ‚Ä¢ 60‚Äì74: "O 'quase certo' cai por detalhes t√©cnicos invis√≠veis."
  ‚Ä¢ 75‚Äì89: "Perfis fortes perdem por falhas documentais cir√∫rgicas."
  ‚Ä¢ 90‚Äì100: "Mesmo excelentes falham por estrutura documental deficiente."

PAR√ÅGRAFO 3 (5‚Äì6 linhas) ‚Äî Solu√ß√£o: Power Oracle‚Ñ¢:
- Apresentar Power Oracle‚Ñ¢ como solu√ß√£o pr√°tica.
- Descrever 4 m√≥dulos:
  ‚Ä¢ Alpha Mindset ‚Äî use o visto como base de expans√£o europeia
  ‚Ä¢ Legal Anatomy ‚Äî checklist completo adaptado ao seu perfil
  ‚Ä¢ War Room Docs ‚Äî modelos prontos que evitam erros cr√≠ticos
  ‚Ä¢ Integrated Family ‚Äî planejamento familiar completo
- CTA final: "Acesse o Power Oracle‚Ñ¢ agora e receba seu roadmap personalizado em minutos."
`.trim(),

    en: ({ profile, score, status, gaps, strengths }) => `
You are Alpha AI, ExpandSpain's strategic visa advisor. Write in English.

CANDIDATE DATA:
- Profile: ${profile}
- Score: ${score}/100
- Status: ${status}
- Critical Gaps: ${gaps || 'None identified'}
- Strengths: ${strengths || 'None listed'}

GOAL: Produce a 3-paragraph analysis that SELLS Power Oracle‚Ñ¢ (‚Ç¨97). Do not mention any other product.

NON-NEGOTIABLE RULES:
- Max 280 words. No emojis.
- Tone: clear, strategic, persuasive. No "guaranteed approval" claims.
- Address as "you" (never "the candidate").
- Use exact gap names provided; do not invent gaps.
- Mention "Power Oracle‚Ñ¢" only in paragraph 3.

MANDATORY STRUCTURE:

PARAGRAPH 1 (3‚Äì4 lines) ‚Äî Technical Diagnosis:
- Start with: "Your [Profile] profile with a [X]/100 score indicates [Status]."
- Name 2‚Äì3 most critical gaps.
- State realistic historical rejection rate:
  ‚Ä¢ 0‚Äì39: 90‚Äì95%
  ‚Ä¢ 40‚Äì59: 60‚Äì75%
  ‚Ä¢ 60‚Äì74: 40‚Äì55%
  ‚Ä¢ 75‚Äì89: 20‚Äì35%
  ‚Ä¢ 90‚Äì100: 5‚Äì15%

PARAGRAPH 2 (3‚Äì4 lines) ‚Äî The Real Problem:
- Explain why information ‚â† strategy by band:
  ‚Ä¢ 0‚Äì39: "99% apply too early and waste ‚Ç¨2,000+."
  ‚Ä¢ 40‚Äì59: "87% with these gaps are rejected even 'knowing' the rules."
  ‚Ä¢ 60‚Äì74: "The 'almost certain' fails on technical details."
  ‚Ä¢ 75‚Äì89: "Strong profiles fall on surgical documentary failures."
  ‚Ä¢ 90‚Äì100: "Even excellent profiles fail due to poor structuring."

PARAGRAPH 3 (5‚Äì6 lines) ‚Äî Solution: Power Oracle‚Ñ¢:
- Present Power Oracle‚Ñ¢ as practical solution.
- Describe 4 modules:
  ‚Ä¢ Alpha Mindset ‚Äî use visa as European expansion base
  ‚Ä¢ Legal Anatomy ‚Äî complete checklist adapted to your profile
  ‚Ä¢ War Room Docs ‚Äî ready templates avoiding critical errors
  ‚Ä¢ Integrated Family ‚Äî complete family planning
- Final CTA: "Access the Power Oracle‚Ñ¢ now and get your personalized roadmap in minutes."
`.trim(),

    es: ({ profile, score, status, gaps, strengths }) => `
Eres Alpha AI, asesora estrat√©gica de visas de ExpandSpain. Escribe en Espa√±ol.

DATOS DEL CANDIDATO:
- Perfil: ${profile}
- Puntuaci√≥n: ${score}/100
- Estado: ${status}
- Gaps cr√≠ticos: ${gaps || 'Ninguno identificado'}
- Fortalezas: ${strengths || 'Ninguna listada'}

OBJETIVO: Crear un an√°lisis de 3 p√°rrafos que VENDA Power Oracle‚Ñ¢ (‚Ç¨97). No mencionar ning√∫n otro producto.

REGLAS INNEGOCIABLES:
- M√°x. 280 palabras. Sin emojis.
- Tono: claro, estrat√©gico, persuasivo. Sin "aprobaci√≥n garantizada".
- Dir√≠gete como "t√∫" (no "el candidato").
- Usa nombres exactos de gaps; no inventes.
- Menciona "Power Oracle‚Ñ¢" solo en p√°rrafo 3.

ESTRUCTURA OBLIGATORIA:

P√ÅRRAFO 1 (3‚Äì4 l√≠neas) ‚Äî Diagn√≥stico T√©cnico:
- Empieza con: "Tu perfil de [Perfil] con puntuaci√≥n [X]/100 indica [Estado]."
- Nombra 2‚Äì3 gaps cr√≠ticos.
- Indica tasa hist√≥rica de rechazo:
  ‚Ä¢ 0‚Äì39: 90‚Äì95%
  ‚Ä¢ 40‚Äì59: 60‚Äì75%
  ‚Ä¢ 60‚Äì74: 40‚Äì55%
  ‚Ä¢ 75‚Äì89: 20‚Äì35%
  ‚Ä¢ 90‚Äì100: 5‚Äì15%

P√ÅRRAFO 2 (3‚Äì4 l√≠neas) ‚Äî El Problema Real:
- Explica por qu√© informaci√≥n ‚â† estrategia por banda:
  ‚Ä¢ 0‚Äì39: "El 99% aplica antes de tiempo y malgasta ‚Ç¨2.000+."
  ‚Ä¢ 40‚Äì59: "El 87% con estos gaps es rechazado sabiendo requisitos."
  ‚Ä¢ 60‚Äì74: "Lo casi seguro falla por detalles t√©cnicos invisibles."
  ‚Ä¢ 75‚Äì89: "Perfiles fuertes caen por fallos documentales quir√∫rgicos."
  ‚Ä¢ 90‚Äì100: "Incluso excelentes fallan por mala estructura."

P√ÅRRAFO 3 (5‚Äì6 l√≠neas) ‚Äî Soluci√≥n: Power Oracle‚Ñ¢:
- Presenta Power Oracle‚Ñ¢ como soluci√≥n pr√°ctica.
- Describe 4 m√≥dulos:
  ‚Ä¢ Alpha Mindset ‚Äî base de expansi√≥n europea
  ‚Ä¢ Legal Anatomy ‚Äî checklist completo adaptado
  ‚Ä¢ War Room Docs ‚Äî plantillas listas evitando errores
  ‚Ä¢ Integrated Family ‚Äî planificaci√≥n familiar completa
- CTA final: "Accede al Power Oracle‚Ñ¢ ahora y recibe tu hoja de ruta personalizada en minutos."
`.trim()
};

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// VALIDA√á√ÉO DE OUTPUT DA IA
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

function validateAIOutput(analysis) {
    const issues = [];
    
    if (!analysis || typeof analysis !== 'string') {
        issues.push('Output √© null ou n√£o √© string');
        return issues;
    }
    
    const trimmed = analysis.trim();
    if (trimmed.length === 0) {
        issues.push('Output est√° vazio');
        return issues;
    }
    
    const words = trimmed.split(/\s+/).length;
    if (words < 90) {
        issues.push(`Muito curto (${words} palavras, m√≠nimo 90)`);
    }
    if (words > 320) {
        issues.push(`Muito longo (${words} palavras, m√°ximo 320)`);
    }
    
    if (!/Power Oracle‚Ñ¢/i.test(trimmed)) {
        issues.push('Faltou mencionar Power Oracle‚Ñ¢');
    }
    
    const paragraphs = trimmed.split(/\n\s*\n/).filter(p => p.trim().length > 30);
    if (paragraphs.length < 3) {
        issues.push(`Estrutura insuficiente (${paragraphs.length} par√°grafos, m√≠nimo 3)`);
    }
    
    return issues;
}

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// FALLBACKS OFFLINE (PT/EN/ES)
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

const FALLBACKS = {
    pt: (score, profile, gaps = []) => {
        const band = score < 40 ? '0-39' : score < 60 ? '40-59' : score < 75 ? '60-74' : score < 90 ? '75-89' : '90-100';
        const rate = { '0-39': 93, '40-59': 68, '60-74': 48, '75-89': 28, '90-100': 9 }[band];
        const gapsTxt = gaps.length ? gaps.slice(0, 3).join(', ') : 'sem gaps cr√≠ticos explicitados';
        
        const statusText = {
            '0-39': 'necessidade de prepara√ß√£o cr√≠tica',
            '40-59': 'necessidade de otimiza√ß√£o',
            '60-74': 'bom potencial',
            '75-89': 'perfil forte',
            '90-100': 'perfil excelente'
        }[band];
        
        return [
            `Seu perfil de ${profile} com pontua√ß√£o ${score}/100 indica ${statusText}. Gaps priorit√°rios: ${gapsTxt}. Com esses pontos sem corre√ß√£o, a taxa hist√≥rica de rejei√ß√£o gira em torno de ${rate}%.`,
            
            `Informa√ß√£o ‚â† estrat√©gia. Muitos perfis nesta faixa falham por sequ√™ncia errada, documenta√ß√£o incompleta e prazos mal geridos ‚Äî detalhes cir√∫rgicos que n√£o aparecem em checklists gen√©ricos dispon√≠veis online.`,
            
            `A solu√ß√£o pr√°tica √© o Power Oracle‚Ñ¢: um roadmap acion√°vel que liga diagn√≥stico √† execu√ß√£o. Voc√™ recebe: (1) Alpha Mindset para usar o visto como base de expans√£o europeia, (2) Legal Anatomy com checklist completo adaptado ao seu perfil de ${profile}, (3) War Room Docs com modelos prontos que evitam erros cr√≠ticos de formata√ß√£o, (4) Integrated Family para planejamento familiar completo. Por ‚Ç¨97 com garantia incondicional de 30 dias, voc√™ transforma seu diagn√≥stico em a√ß√£o. Acesse o Power Oracle‚Ñ¢ agora e receba seu roadmap personalizado em minutos.`
        ].join('\n\n');
    },
    
    en: (score, profile, gaps = []) => {
        const band = score < 40 ? '0-39' : score < 60 ? '40-59' : score < 75 ? '60-74' : score < 90 ? '75-89' : '90-100';
        const rate = { '0-39': 93, '40-59': 68, '60-74': 48, '75-89': 28, '90-100': 9 }[band];
        const gapsTxt = gaps.length ? gaps.slice(0, 3).join(', ') : 'no explicit critical gaps';
        
        const statusText = {
            '0-39': 'critical preparation needed',
            '40-59': 'optimization required',
            '60-74': 'good potential',
            '75-89': 'strong profile',
            '90-100': 'excellent profile'
        }[band];
        
        return [
            `Your ${profile} profile with a ${score}/100 score indicates ${statusText}. Priority gaps: ${gapsTxt}. With these unresolved, historical rejection rate is approximately ${rate}%.`,
            
            `Information ‚â† strategy. Many profiles in this range fail due to wrong sequencing, incomplete documentation, and poor timing management ‚Äî surgical details no generic online checklist captures.`,
            
            `The practical solution is Power Oracle‚Ñ¢: an actionable roadmap from diagnosis to execution. You get: (1) Alpha Mindset to use the visa as European expansion base, (2) Legal Anatomy with complete checklist adapted to your ${profile} profile, (3) War Room Docs with ready templates that avoid critical formatting errors, (4) Integrated Family for complete family planning. For ‚Ç¨97 with unconditional 30-day guarantee, you transform your diagnosis into action. Access the Power Oracle‚Ñ¢ now and get your personalized roadmap in minutes.`
        ].join('\n\n');
    },
    
    es: (score, profile, gaps = []) => {
        const band = score < 40 ? '0-39' : score < 60 ? '40-59' : score < 75 ? '60-74' : score < 90 ? '75-89' : '90-100';
        const rate = { '0-39': 93, '40-59': 68, '60-74': 48, '75-89': 28, '90-100': 9 }[band];
        const gapsTxt = gaps.length ? gaps.slice(0, 3).join(', ') : 'sin gaps cr√≠ticos expl√≠citos';
        
        const statusText = {
            '0-39': 'preparaci√≥n cr√≠tica necesaria',
            '40-59': 'optimizaci√≥n requerida',
            '60-74': 'buen potencial',
            '75-89': 'perfil fuerte',
            '90-100': 'perfil excelente'
        }[band];
        
        return [
            `Tu perfil de ${profile} con ${score}/100 indica ${statusText}. Gaps prioritarios: ${gapsTxt}. Con ellos sin corregir, el rechazo hist√≥rico ronda el ${rate}%.`,
            
            `Informaci√≥n ‚â† estrategia. Muchos perfiles en este rango fallan por secuencia incorrecta, documentaci√≥n incompleta y mala gesti√≥n de plazos ‚Äî detalles quir√∫rgicos que no aparecen en checklists gen√©ricos online.`,
            
            `La soluci√≥n pr√°ctica es Power Oracle‚Ñ¢: una hoja de ruta accionable de diagn√≥stico a ejecuci√≥n. Recibes: (1) Alpha Mindset para usar el visado como base de expansi√≥n europea, (2) Legal Anatomy con checklist completo adaptado a tu perfil de ${profile}, (3) War Room Docs con plantillas listas que evitan errores cr√≠ticos de formato, (4) Integrated Family para planificaci√≥n familiar completa. Por ‚Ç¨97 con garant√≠a incondicional de 30 d√≠as, transformas tu diagn√≥stico en acci√≥n. Accede al Power Oracle‚Ñ¢ ahora y recibe tu hoja de ruta personalizada en minutos.`
        ].join('\n\n');
    }
};

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// FUN√á√ÉO PRINCIPAL: GERA√á√ÉO DE AN√ÅLISE COM IA GEMINI 2.5
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

async function generateAIAnalysis(scoreData, answers, language = 'pt') {
    // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    // LOGS INICIAIS (SEMPRE VIS√çVEIS - ANTES DO CACHE)
    // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    console.log('‚ïê'.repeat(70));
    console.log('ü§ñ [IA] generateAIAnalysis() CHAMADA');
    console.log(`   Score: ${scoreData?.score}/100`);
    console.log(`   Status: ${scoreData?.status}`);
    console.log(`   Profile: ${scoreData?.profile}`);
    console.log(`   Language: ${language}`);
    console.log(`   Gaps: ${scoreData?.gaps?.length || 0}`);
    console.log(`   Timestamp: ${new Date().toISOString()}`);
    console.log('‚ïê'.repeat(70));
    
    const lang = ['pt', 'en', 'es'].includes(language) ? language : 'pt';
    
    try {
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // VERIFICAR CACHE
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        const cacheKey = generateCacheKey(scoreData, lang);
        console.log(`üì¶ [Cache] Verificando cache...`);
        console.log(`   Key: ${cacheKey}`);
        
        const cached = analysisCache.get(cacheKey);
        if (cached && Date.now() - cached.timestamp < CACHE_TTL) {
            const ageSeconds = Math.floor((Date.now() - cached.timestamp) / 1000);
            const ageMinutes = Math.floor(ageSeconds / 60);
            
            console.log(`‚úÖ [Cache] ENCONTRADO!`);
            console.log(`   Idade: ${ageSeconds}s (${ageMinutes} min)`);
            console.log(`   Tamanho: ${cached.analysis.length} caracteres`);
            console.log(`   Modelo usado: ${cached.model || 'desconhecido'}`);
            console.log('‚ïê'.repeat(70));
            
            return cached.analysis;
        } else {
            console.log(`‚ùå [Cache] N√ÉO ENCONTRADO ou expirado`);
        }
        
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // PREPARAR DADOS PARA IA
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        console.log(`\nüìù [Prompt] Preparando dados...`);
        
        const safeProfile = sanitizeForPrompt(scoreData?.profile || 'Candidato');
        const safeGaps = (scoreData?.gaps || []).map(sanitizeForPrompt).join(', ');
        const safeStrengths = (scoreData?.strengths || []).map(sanitizeForPrompt).join(', ');
        const score = Number(scoreData?.score || 0);
        const status = sanitizeForPrompt(scoreData?.status || 'Em avalia√ß√£o');
        
        console.log(`   Profile: ${safeProfile}`);
        console.log(`   Score: ${score}`);
        console.log(`   Status: ${status}`);
        console.log(`   Language: ${lang.toUpperCase()}`);
        
        const prompt = PROMPT_TEMPLATES[lang]({
            profile: safeProfile,
            score,
            status,
            gaps: safeGaps,
            strengths: safeStrengths
        });
        
        console.log(`   Prompt preparado: ${prompt.length} caracteres`);
        
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // LOOP DE FALLBACK: TENTA TODOS OS MODELOS SEQUENCIALMENTE
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        let analysis = null;
        let lastError = null;
        let workingModel = null;
        
        console.log(`\nüîÑ [IA] Iniciando tentativas com ${MODEL_CANDIDATES.length} modelos`);
        console.log(`   Modelos: ${MODEL_CANDIDATES.join(', ')}`);
        
        for (let i = 0; i < MODEL_CANDIDATES.length; i++) {
            const modelId = MODEL_CANDIDATES[i];
            
            try {
                console.log(`\n${'‚îÄ'.repeat(70)}`);
                console.log(`üîÑ [IA] Tentativa ${i + 1}/${MODEL_CANDIDATES.length}`);
                console.log(`   Modelo: ${modelId}`);
                
                // Configurar modelo com SafetySettings
                const model = genAI.getGenerativeModel({
                    model: modelId,
                    safetySettings: [
                        {
                            category: HarmCategory.HARM_CATEGORY_HARASSMENT,
                            threshold: HarmBlockThreshold.BLOCK_NONE,
                        },
                        {
                            category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,
                            threshold: HarmBlockThreshold.BLOCK_NONE,
                        },
                        {
                            category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,
                            threshold: HarmBlockThreshold.BLOCK_NONE,
                        },
                        {
                            category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,
                            threshold: HarmBlockThreshold.BLOCK_NONE,
                        },
                    ],
                    generationConfig: {
                        temperature: 0.7,
                        topK: 40,
                        topP: 0.95,
                        maxOutputTokens: 1024,
                    }
                });
                
                console.log(`   Enviando requisi√ß√£o para Gemini API...`);
                const startTime = Date.now();
                
                // Chamar API
                const result = await model.generateContent(prompt);
                const response = await result.response;
                
                const elapsed = Date.now() - startTime;
                console.log(`   Resposta recebida em ${elapsed}ms`);
                
                // Extrair texto (m√∫ltiplos m√©todos)
                analysis =
                    (typeof response.text === 'function' ? response.text() : null) ||
                    response?.candidates?.[0]?.content?.parts?.map(p => p.text).join('\n') ||
                    response?.text ||
                    '';
                
                if (analysis && analysis.trim() !== '') {
                    console.log(`‚úÖ [IA] SUCESSO com modelo: ${modelId}`);
                    console.log(`   Tamanho: ${analysis.length} caracteres`);
                    console.log(`   Palavras: ${analysis.split(/\s+/).length}`);
                    console.log(`   Tempo: ${elapsed}ms`);
                    
                    workingModel = modelId;
                    break; // Sucesso! Sair do loop
                    
                } else {
                    throw new Error('Resposta vazia da IA');
                }
                
            } catch (error) {
                console.warn(`‚ö†Ô∏è  [IA] Modelo FALHOU: ${modelId}`);
                console.warn(`   Tipo de erro: ${error.name}`);
                console.warn(`   Mensagem: ${error.message}`);
                
                lastError = error;
                
                // Se n√£o √© o √∫ltimo modelo, continuar
                if (i < MODEL_CANDIDATES.length - 1) {
                    console.log(`   ‚û°Ô∏è  Tentando pr√≥ximo modelo...`);
                } else {
                    console.error(`\n‚ùå [IA] TODOS os ${MODEL_CANDIDATES.length} modelos falharam!`);
                    console.error(`   √öltimo erro: ${error.message}`);
                    throw new Error(`Todos os modelos falharam. Usando fallback offline.`);
                }
            }
        }
        
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // VALIDAR OUTPUT DA IA
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        if (!analysis || analysis.trim() === '') {
            throw new Error('Nenhum modelo retornou texto v√°lido');
        }
        
        console.log(`\n${'‚îÄ'.repeat(70)}`);
        console.log(`üîç [Valida√ß√£o] Verificando qualidade...`);
        
        const issues = validateAIOutput(analysis);
        
        if (issues.length > 0) {
            console.warn(`‚ö†Ô∏è  [Valida√ß√£o] ${issues.length} problema(s) encontrado(s):`);
            issues.forEach(issue => console.warn(`   - ${issue}`));
            
            const critical = issues.some(i => 
                /Power Oracle‚Ñ¢|null|vazio/i.test(i)
            );
            
            if (critical) {
                console.error(`‚ùå [Valida√ß√£o] Problemas CR√çTICOS detectados!`);
                throw new Error('An√°lise da IA n√£o passou na valida√ß√£o cr√≠tica');
            } else {
                console.log(`   ‚ÑπÔ∏è  Problemas n√£o s√£o cr√≠ticos, aceitando output`);
            }
        } else {
            console.log(`‚úÖ [Valida√ß√£o] Output passou em todas as verifica√ß√µes`);
        }
        
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // SALVAR NO CACHE
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        analysisCache.set(cacheKey, {
            analysis: analysis,
            timestamp: Date.now(),
            model: workingModel
        });
        
        console.log(`\nüì¶ [Cache] An√°lise salva com sucesso`);
        console.log(`   Modelo: ${workingModel}`);
        console.log(`   Cache size: ${analysisCache.size} entrada(s)`);
        console.log(`   TTL: 7 dias`);
        
        console.log('\n' + '‚ïê'.repeat(70));
        console.log('‚úÖ [IA] An√°lise gerada com SUCESSO!');
        console.log('‚ïê'.repeat(70));
        
        return analysis;
        
    } catch (err) {
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // FALLBACK OFFLINE (√öLTIMO RECURSO)
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        console.error('\n' + '‚ïê'.repeat(70));
        console.error('‚ùå [IA] ERRO FINAL - Usando fallback offline');
        console.error(`   Erro: ${err.message}`);
        console.error(`   Stack: ${err.stack}`);
        console.error('‚ïê'.repeat(70));
        
        const score = Number(scoreData?.score || 0);
        const profile = sanitizeForPrompt(scoreData?.profile || 'Candidato');
        const gaps = scoreData?.gaps || [];
        
        console.log(`\nüìù [Fallback] Gerando an√°lise offline...`);
        console.log(`   Language: ${lang}`);
        console.log(`   Score: ${score}`);
        console.log(`   Profile: ${profile}`);
        
        const fallback = FALLBACKS[lang](score, profile, gaps);
        
        console.log(`‚úÖ [Fallback] An√°lise offline gerada`);
        console.log(`   Tamanho: ${fallback.length} caracteres`);
        console.log('‚ïê'.repeat(70));
        
        return fallback;
    }
}

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// EXPORTS
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

module.exports = {
    generateAIAnalysis
};
